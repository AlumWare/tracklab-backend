// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackLab.Shared.Infrastructure.Persistence.EFC.Configuration;

#nullable disable

namespace Alumware.Tracklab.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250704001959_InitialCleanTenantRelations")]
    partial class InitialCleanTenantRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long>("LogisticsId")
                        .HasColumnType("bigint")
                        .HasColumnName("logistics_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("order_date");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("shipping_address");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("customer_id")
                        .HasColumnType("bigint");

                    b.Property<long>("logistics_id")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId")
                        .HasName("p_k_orders");

                    b.HasIndex("customer_id");

                    b.HasIndex("logistics_id");

                    b.ToTable("orders", null, t =>
                        {
                            t.Property("logistics_id")
                                .HasColumnName("logistics_id1");
                        });
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Order.Domain.Model.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("p_k_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("i_x_order_items_order_id");

                    b.HasIndex("product_id");

                    b.ToTable("order_items", null, t =>
                        {
                            t.Property("product_id")
                                .HasColumnName("OrderItem_product_id");
                        });
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phone_number");

                    b.Property<long>("PositionId")
                        .HasColumnType("bigint")
                        .HasColumnName("position_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_employees");

                    b.HasIndex("PositionId")
                        .HasDatabaseName("i_x_employees_position_id");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_employees_tenant_id");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_positions");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_positions_tenant_id");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_products");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_products_tenant_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.PrimitiveCollection<string>("ImageAssetIds")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("image_asset_ids");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("license_plate");

                    b.Property<decimal>("LoadCapacity")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("load_capacity");

                    b.Property<int>("PaxCapacity")
                        .HasColumnType("int")
                        .HasColumnName("pax_capacity");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_vehicles");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_vehicles_tenant_id");

                    b.ToTable("vehicles", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Warehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_warehouses");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_warehouses_tenant_id");

                    b.ToTable("warehouses", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Container", b =>
                {
                    b.Property<long>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("container_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("order_id")
                        .HasColumnType("bigint");

                    b.Property<long>("warehouse_id")
                        .HasColumnType("bigint");

                    b.HasKey("ContainerId")
                        .HasName("p_k_containers");

                    b.HasIndex("order_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("containers", null, t =>
                        {
                            t.Property("order_id")
                                .HasColumnName("Container_order_id");

                            t.Property("warehouse_id")
                                .HasColumnName("Container_warehouse_id");
                        });
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Route", b =>
                {
                    b.Property<long>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("vehicle_id")
                        .HasColumnType("bigint");

                    b.HasKey("RouteId")
                        .HasName("p_k_routes");

                    b.HasIndex("vehicle_id");

                    b.ToTable("routes", null, t =>
                        {
                            t.Property("vehicle_id")
                                .HasColumnName("Route_vehicle_id");
                        });
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.TrackingEvent", b =>
                {
                    b.Property<long>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("event_id");

                    b.Property<long>("ContainerId")
                        .HasColumnType("bigint")
                        .HasColumnName("container_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("event_time");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("warehouse_id")
                        .HasColumnType("bigint");

                    b.HasKey("EventId");

                    b.HasIndex("ContainerId")
                        .HasDatabaseName("i_x_tracking_events_container_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("tracking_events", null, t =>
                        {
                            t.Property("warehouse_id")
                                .HasColumnName("TrackingEvent_warehouse_id");
                        });
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Entities.RouteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("completed_at");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_completed");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint")
                        .HasColumnName("warehouse_id");

                    b.Property<long>("warehouse_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("p_k_route_items");

                    b.HasIndex("RouteId")
                        .HasDatabaseName("i_x_route_items_route_id");

                    b.HasIndex("warehouse_id");

                    b.ToTable("route_items", t =>
                        {
                            t.Property("warehouse_id")
                                .HasColumnName("warehouse_id1");
                        });
                });

            modelBuilder.Entity("TrackLab.IAM.Domain.Model.Aggregates.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CommercialName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("commercial_name");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("legal_name");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("ruc");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("website");

                    b.HasKey("Id")
                        .HasName("p_k_tenants");

                    b.ToTable("tenants", (string)null);
                });

            modelBuilder.Entity("TrackLab.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("password_hash");

                    b.Property<string>("RolesInternal")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("roles");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("p_k_users");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("i_x_users_tenant_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("routes_orders", b =>
                {
                    b.Property<long>("RouteId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.HasKey("RouteId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("routes_orders", (string)null);
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Customer")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_orders__tenants_tenant_id");

                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Logistics")
                        .WithMany()
                        .HasForeignKey("logistics_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_orders__tenants_logistics_id");

                    b.Navigation("Customer");

                    b.Navigation("Logistics");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Order.Domain.Model.Entities.OrderItem", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("f_k_order_items_orders_order_id");

                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_order_items__products_product_id1");

                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("price_amount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("price_currency");

                            b1.HasKey("Id");

                            b1.ToTable("order_items");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_order_items_order_items_order_item_id");
                        });

                    b.OwnsOne("Alumware.Tracklab.API.Order.Domain.Model.ValueObjects.ProductId", "ProductId", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("product_id");

                            b1.HasKey("Id");

                            b1.ToTable("order_items");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_order_items_order_items_order_item_id");
                        });

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductId")
                        .IsRequired();
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Employee", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_employees__positions_position_id");

                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Employees")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_employees__tenants_tenant_id");

                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("email");

                            b1.HasKey("Id");

                            b1.ToTable("employees");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_employees_employees_employee_id");
                        });

                    b.OwnsOne("Alumware.Tracklab.API.Resource.Domain.Model.ValueObjects.Dni", "Dni", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("dni");

                            b1.HasKey("Id");

                            b1.ToTable("employees");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_employees_employees_employee_id");
                        });

                    b.Navigation("Dni")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Position", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Positions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_positions__tenants_tenant_id");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Product", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Products")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_products__tenants_tenant_id");

                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("price_amount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("price_currency");

                            b1.HasKey("Id");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_products_products_product_id");
                        });

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Vehicle", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Vehicles")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_vehicles__tenants_tenant_id");

                    b.OwnsOne("Alumware.Tracklab.API.Resource.Domain.Model.ValueObjects.Coordinates", "Location", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double")
                                .HasColumnName("location_latitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double")
                                .HasColumnName("location_longitude");

                            b1.HasKey("Id");

                            b1.ToTable("vehicles");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_vehicles_vehicles_vehicle_id");
                        });

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Warehouse", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Warehouses")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_warehouses__tenants_tenant_id");

                    b.OwnsOne("Alumware.Tracklab.API.Resource.Domain.Model.ValueObjects.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double")
                                .HasColumnName("latitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double")
                                .HasColumnName("longitude");

                            b1.HasKey("Id");

                            b1.ToTable("warehouses");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_warehouses_warehouses_warehouse_id");
                        });

                    b.OwnsOne("Alumware.Tracklab.API.Resource.Domain.Model.ValueObjects.StreetAddress", "Address", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("address");

                            b1.HasKey("Id");

                            b1.ToTable("warehouses");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_warehouses_warehouses_warehouse_id");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Coordinates")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Container", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_containers_orders_order_id1");

                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_containers_warehouses_warehouse_id1");

                    b.OwnsOne("Alumware.Tracklab.API.Tracking.Domain.Model.ValueObjects.WarehouseId", "WarehouseId", b1 =>
                        {
                            b1.Property<long>("ContainerId")
                                .HasColumnType("bigint")
                                .HasColumnName("container_id");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("warehouse_id");

                            b1.HasKey("ContainerId")
                                .HasName("p_k_containers");

                            b1.ToTable("containers");

                            b1.WithOwner()
                                .HasForeignKey("ContainerId")
                                .HasConstraintName("f_k_containers_containers_container_id");
                        });

                    b.OwnsOne("Alumware.Tracklab.API.Tracking.Domain.Model.ValueObjects.OrderId", "OrderId", b1 =>
                        {
                            b1.Property<long>("ContainerId")
                                .HasColumnType("bigint")
                                .HasColumnName("container_id");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("order_id");

                            b1.HasKey("ContainerId")
                                .HasName("p_k_containers");

                            b1.ToTable("containers");

                            b1.WithOwner()
                                .HasForeignKey("ContainerId")
                                .HasConstraintName("f_k_containers_containers_container_id");
                        });

                    b.OwnsMany("Alumware.Tracklab.API.Tracking.Domain.Model.ValueObjects.ShipItem", "ShipItems", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<long>("ContainerId")
                                .HasColumnType("bigint");

                            b1.Property<long>("ProductId")
                                .HasColumnType("bigint")
                                .HasColumnName("product_id");

                            b1.Property<long>("Quantity")
                                .HasColumnType("bigint")
                                .HasColumnName("quantity");

                            b1.HasKey("Id");

                            b1.HasIndex("ContainerId");

                            b1.ToTable("ship_items");

                            b1.WithOwner()
                                .HasForeignKey("ContainerId")
                                .HasConstraintName("f_k_ship_items_containers_container_id");
                        });

                    b.Navigation("Order");

                    b.Navigation("OrderId")
                        .IsRequired();

                    b.Navigation("ShipItems");

                    b.Navigation("Warehouse");

                    b.Navigation("WarehouseId")
                        .IsRequired();
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Route", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("vehicle_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_routes_vehicles_vehicle_id1");

                    b.OwnsOne("Alumware.Tracklab.API.Tracking.Domain.Model.ValueObjects.VehicleId", "VehicleId", b1 =>
                        {
                            b1.Property<long>("RouteId")
                                .HasColumnType("bigint")
                                .HasColumnName("route_id");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("vehicle_id");

                            b1.HasKey("RouteId")
                                .HasName("p_k_routes");

                            b1.ToTable("routes");

                            b1.WithOwner()
                                .HasForeignKey("RouteId")
                                .HasConstraintName("f_k_routes_routes_route_id");
                        });

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleId")
                        .IsRequired();
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.TrackingEvent", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Container", "Container")
                        .WithMany("TrackingEvents")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_tracking_events_containers_container_id");

                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_tracking_events_warehouses_warehouse_id1");

                    b.OwnsOne("Alumware.Tracklab.API.Tracking.Domain.Model.ValueObjects.WarehouseId", "WarehouseId", b1 =>
                        {
                            b1.Property<long>("EventId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Value")
                                .HasColumnType("bigint")
                                .HasColumnName("warehouse_id");

                            b1.HasKey("EventId");

                            b1.ToTable("tracking_events");

                            b1.WithOwner()
                                .HasForeignKey("EventId")
                                .HasConstraintName("f_k_tracking_events_tracking_events_tracking_event_temp_id");
                        });

                    b.Navigation("Container");

                    b.Navigation("Warehouse");

                    b.Navigation("WarehouseId")
                        .IsRequired();
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Entities.RouteItem", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Route", "Route")
                        .WithMany("RouteItems")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_route_items_routes_route_id");

                    b.HasOne("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("warehouse_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_route_items_warehouses_warehouse_id1");

                    b.Navigation("Route");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("TrackLab.IAM.Domain.Model.Aggregates.Tenant", b =>
                {
                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("email");

                            b1.HasKey("Id");

                            b1.ToTable("tenants");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_tenants_tenants_tenant_id");
                        });

                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("phone_number");

                            b1.HasKey("Id");

                            b1.ToTable("tenants");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_tenants_tenants_tenant_id");
                        });

                    b.Navigation("Email");

                    b.Navigation("PhoneNumber");
                });

            modelBuilder.Entity("TrackLab.IAM.Domain.Model.Aggregates.User", b =>
                {
                    b.HasOne("TrackLab.IAM.Domain.Model.Aggregates.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_users_tenants_tenant_id");

                    b.OwnsOne("TrackLab.Shared.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("email");

                            b1.HasKey("Id");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_users_users_user_id");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("routes_orders", b =>
                {
                    b.HasOne("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_routes_orders_order");

                    b.HasOne("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Route", null)
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_routes_orders_route");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Order.Domain.Model.Aggregates.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Resource.Domain.Model.Aggregates.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Container", b =>
                {
                    b.Navigation("TrackingEvents");
                });

            modelBuilder.Entity("Alumware.Tracklab.API.Tracking.Domain.Model.Aggregates.Route", b =>
                {
                    b.Navigation("RouteItems");
                });

            modelBuilder.Entity("TrackLab.IAM.Domain.Model.Aggregates.Tenant", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Positions");

                    b.Navigation("Products");

                    b.Navigation("Users");

                    b.Navigation("Vehicles");

                    b.Navigation("Warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
